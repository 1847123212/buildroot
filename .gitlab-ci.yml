# Configuration for Gitlab-CI.
# Builds appear on https://gitlab.com/buildroot.org/buildroot/pipelines
# The .gitlab-ci.yml file is generated from .gitlab-ci.yml.in.
# It needs to be regenerated every time a defconfig is added, using
# "make .gitlab-ci.yml".

image: maohan001/ubuntu-buildroot

stages:
  - 610-build
  - 610-test
  - 807-build
  - 807-test
  - 810-build
  - 810-test
  - sales-build
  - toolchain-multi-libs

variables:
    PREFIX: ""
    SUFFIX: _br_defconfig
    CHIP_PREFIX: csky_
    QEMU_PREFIX: qemu_csky_
    SALES_PREFIX: csky_
    CONFIG_NAME: ""

    VENDER_ID: ""
    CPU_ID: ""
    MAIN: ""

.build_buildroot: &build_buildroot
    - echo 'Configure buildroot'
    - CONFIG_NAME=${PREFIX}${MAIN}${SUFFIX}
    - echo ${CONFIG_NAME}
    - make ${CONFIG_NAME}
    - echo 'Build buildroot'
    - |
        make > >(tee build.log |grep '>>>') 2>&1 || {
            echo 'Failed build last output'
            tail -200 build.log
            xz -z build.log
            exit 1
        }
    - xz -z build.log
    - if [ -f output/images/vmlinux ]; then
          output/host/bin/csky-linux-strip -sg output/images/vmlinux;
          xz -z output/images/vmlinux;
      fi
    - if [ -f output/images/rootfs.cpio ]; then
          rm -f output/images/rootfs.tar;
          xz -z output/images/rootfs.cpio;
      fi
    - if [ -f output/images/rootfs.tar ]; then
          xz -z output/images/rootfs.tar;
      fi

.common_builds: &common_builds
    script: *build_buildroot
    dependencies: []
    cache:
      paths:
        - dl/
    artifacts:
        when: always
        expire_in: 2 weeks
        paths:
            - output/images/
            - build.log.xz

.common_tests: &common_tests
    - echo 'Prepare to run'
    - mkdir -p output/host/
    - tar -xf output/images/csky_toolchain_*.tar.xz -C output/host
    - if [ -f output/images/vmlinux.xz ]; then
          xz -d output/images/vmlinux.xz;
      fi
    - if [ -f output/images/rootfs.tar.xz ]; then
          xz -d output/images/rootfs.tar.xz;
      fi
    - if [ -f output/images/rootfs.cpio.xz ]; then
          xz -d output/images/rootfs.cpio.xz;
      fi
    - ./output/host/csky-ci/run_test.sh
    - ./output/host/csky-ci/generic_analyze.sh || exit 1

.common_chip_test: &common_chip_test
    script: *common_tests
    artifacts:
        when: on_success
        paths:
            - test.log

.common_qemu_test:  &common_qemu_test
    script: *common_tests
    artifacts:
        when: always
        expire_in: 2 weeks
        paths:
            - test.log

################ 610 ################
.chip_610_build_before: &chip_610_build_before
    - VENDER_ID="gx6622_" #fixed
    - CPU_ID=${CI_BUILD_NAME##*libc_} #in case if it's abc or abcf
    - PREFIX=${CHIP_PREFIX}${CPU_ID}'_'${VENDER_ID}
    - MAIN=${CI_BUILD_NAME%_${CPU_ID}}

.chip_610_build: &chip_610_build
    stage: 610-build
    before_script: *chip_610_build_before
    <<: *common_builds

.chip_610_test: &chip_610_test
    stage: 610-test
    <<: *common_chip_test

4.9_uclibc_610: *chip_610_build
4.9_glibc_610: *chip_610_build
4.14_uclibc_610: *chip_610_build
4.14_glibc_610: *chip_610_build
4.16_glibc_610: *chip_610_build

4.9_uclibc_610_test:
    tags:
      - csky-610-gx6622
    dependencies:
      - 4.9_uclibc_610
    <<: *chip_610_test

4.9_glibc_610_test:
    tags:
      - csky-610-gx6622
    dependencies:
      - 4.9_glibc_610
    <<: *chip_610_test

4.14_uclibc_610_test:
    tags:
      - csky-610-gx6622
    dependencies:
      - 4.14_uclibc_610
    <<: *chip_610_test

4.14_glibc_610_test:
    tags:
      - csky-610-gx6622
    dependencies:
      - 4.14_glibc_610
    <<: *chip_610_test

4.16_glibc_610_test:
    tags:
      - csky-610-gx6622
    dependencies:
      - 4.16_glibc_610
    <<: *chip_610_test

################ 807 ################
.chip_807_build_before: &chip_807_build_before
    - VENDER_ID="eragon_" #fixed
    - CPU_ID=${CI_BUILD_NAME##*libc_} #in case if it's abc or abcf
    - PREFIX=${CHIP_PREFIX}${CPU_ID}'_'${VENDER_ID}
    - MAIN=${CI_BUILD_NAME%_${CPU_ID}}

.chip_807_build: &chip_807_build
    stage: 807-build
    before_script: *chip_807_build_before
    <<: *common_builds

.chip_807_test: &chip_807_test
    stage: 807-test
    <<: *common_chip_test

4.9_uclibc_807: *chip_807_build
4.9_glibc_807: *chip_807_build
4.14_uclibc_807: *chip_807_build
4.14_glibc_807: *chip_807_build
4.9_glibc_807f: *chip_807_build

4.9_uclibc_807_test:
    tags:
      - csky-807-eragon
    dependencies:
      - 4.9_uclibc_807
    <<: *chip_807_test

4.9_glibc_807_test:
    tags:
      - csky-807-eragon
    dependencies:
      - 4.9_glibc_807
    <<: *chip_807_test

4.14_uclibc_807_test:
    tags:
      - csky-807-eragon
    dependencies:
      - 4.14_uclibc_807
    <<: *chip_807_test

4.14_glibc_807_test:
    tags:
      - csky-807-eragon
    dependencies:
      - 4.14_glibc_807
    <<: *chip_807_test

4.9_glibc_807f_test:
    tags:
      - csky-807-eragon
    dependencies:
      - 4.9_glibc_807
    <<: *chip_807_test

.qemu_807_build_before: &qemu_807_build_before
    - CPU_ID=${CI_BUILD_NAME##*libc_} #in case if it's abc or abcf
    - PREFIX=${QEMU_PREFIX}${CPU_ID}'_'
    - HELL=${CI_BUILD_NAME%_${CPU_ID}}
    - MAIN=${HELL#*'qemu_'}

.qemu_807_build: &qemu_807_build
    stage: 807-build
    before_script: *qemu_807_build_before
    <<: *common_builds

.qemu_807_test: &qemu_807_test
    stage: 807-test
    <<: *common_qemu_test

qemu_4.9_uclibc_807f: *qemu_807_build
qemu_4.9_glibc_807f: *qemu_807_build
qemu_4.14_uclibc_807f: *qemu_807_build
qemu_4.14_glibc_807f: *qemu_807_build

qemu_4.9_uclibc_807f_test:
    dependencies:
      - qemu_4.9_uclibc_807f
    <<: *qemu_807_test

qemu_4.9_glibc_807f_test:
    dependencies:
      - qemu_4.9_glibc_807f
    <<: *qemu_807_test

qemu_4.14_uclibc_807f_test:
    dependencies:
      - qemu_4.14_uclibc_807f
    <<: *qemu_807_test

qemu_4.14_glibc_807f_test:
    dependencies:
      - qemu_4.14_glibc_807f
    <<: *qemu_807_test

################ 810 ################
.qemu_810_build_before: &qemu_810_build_before
    - CPU_ID=${CI_BUILD_NAME##*libc_} #in case if it's abc or abcf
    - PREFIX=${QEMU_PREFIX}${CPU_ID}'_'
    - HELL=${CI_BUILD_NAME%_${CPU_ID}}
    - MAIN=${HELL#*'qemu_'}

.qemu_810_build: &qemu_810_build
    stage: 810-build
    before_script: *qemu_810_build_before
    <<: *common_builds

.qemu_810_test: &qemu_810_test
    stage: 810-test
    <<: *common_qemu_test

qemu_4.9_uclibc_810f: *qemu_810_build
qemu_4.9_glibc_810f: *qemu_810_build
qemu_4.14_uclibc_810f: *qemu_810_build
qemu_4.14_glibc_810f: *qemu_810_build

qemu_4.9_uclibc_810f_test:
    dependencies:
      - qemu_4.9_uclibc_810f
    <<: *qemu_810_test

qemu_4.9_glibc_810f_test:
    dependencies:
      - qemu_4.9_glibc_810f
    <<: *qemu_810_test

qemu_4.14_uclibc_810f_test:
    dependencies:
      - qemu_4.14_uclibc_810f
    <<: *qemu_810_test

qemu_4.14_glibc_810f_test:
    dependencies:
      - qemu_4.14_glibc_810f
    <<: *qemu_810_test

################ sales ################
.sales_build_before: &sales_build_before
    - PREFIX=${SALES_PREFIX}
    - MAIN=${CI_BUILD_NAME}

.sales_build: &sales_build
    stage: sales-build
    before_script: *sales_build_before
    <<: *common_builds

# sales-build
860_platform: *sales_build
gx6605s_fbcon: *sales_build
gx6605s: *sales_build

# sales-test
# sales has no test

################ toolchain ################
# toolchain-multi-libs
abiv2-uclibc:
    stage: toolchain-multi-libs
    dependencies: []
    script:
      - echo abiv2-uclibc

abiv2-glibc:
    stage: toolchain-multi-libs
    dependencies: []
    script:
      - echo abiv2-glibc
